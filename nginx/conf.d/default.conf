# Rate Limiting settings
# zone = zone name:memory, rate = x request/second
limit_req_zone $binary_remote_addr
                    zone=rate_limit_by_ip_addr:10m
                    rate=1r/s;

# Send proper http status code
limit_req_status 429;

# tells where to store the cache data; enables caching (uses default directory)
proxy_cache_path /var/cache/nginx
                    keys_zone=NginxCache:20m
                    inactive=60m
                    levels=1:2
                    max_size=10g;

upstream demo1 {
    server app:8000;
}

upstream demo2 {
    server app2:8080;
}

split_clients "${arg_token}" $test_variant {
    50% demo1;
    *   demo2;
}

server {
    listen  80;
    listen  [::]:80;
    server_name  main.com www.main.com *.main.com;

    # apply rate limit settings
    # burst are delayed allowance in addition to the request rate
    # delay 5 request from buffer/burst
    limit_req zone=rate_limit_by_ip_addr burst=10 delay=5;

    location / {
        proxy_pass  http://$test_variant;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        # caching reference
        proxy_cache NginxCache;

        # define how many times a page is viewed before caching
        # proxy_cache_min_uses 5;

        # other cache settings
        proxy_cache_methods GET;
        proxy_cache_valid 200 10m;
        proxy_cache_valid 404 5m;

        # ignore value in vary in generating a cache key
        proxy_ignore_headers Vary;

        # cache when session id differs
        proxy_cache_bypass $cookie_sessionid;

        # store some sort of metadata
        add_header X-Proxy-Cache $upstream_cache_status;
    }

    location /static/ {
        alias /home/app/static/;
    }

    # disable caching for this endpoint
    # location /p1 {
    #     proxy_pass  http://demo;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $host;

    #     # other cache settings
    #     proxy_cache_bypass $http_cache_bypass;
    #     proxy_cache off;

    #     # store some sort of metadata
    #     add_header X-Proxy-Cache $upstream_cache_status;
    # }
}


# split_clients "${arg_token}" $test_variant {
#     50% "/home/html/main";
#     *   "/home/html/secondary";
# }

# server {
#     listen  80;
#     listen  [::]:80;
#     server_name  main.com www.main.com *.main.com;

#     location / {
#         root $test_variant;
#         index index.html index.htm;
#     }
# }

# # tells where to store the cache data; enables caching (uses default directory)
# proxy_cache_path /var/cache/nginx
#                     keys_zone=NginxCache:20m
#                     inactive=60m
#                     levels=1:2
#                     max_size=10g;

# upstream demo {
#     server app:8000;
# }

# server {
#     listen  80;
#     listen  [::]:80;
#     # server_name  main.com www.main.com *.main.com;

#     location / {
#         proxy_pass  http://demo;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header Host $host;

#         # caching reference
#         proxy_cache NginxCache;

#         # define how many times a page is viewed before caching
#         # proxy_cache_min_uses 5;

#         # other cache settings
#         proxy_cache_methods GET;
#         proxy_cache_valid 200 10m;
#         proxy_cache_valid 404 5m;

#         # ignore value in vary in generating a cache key
#         proxy_ignore_headers Vary;

#         # cache when session id differs
#         proxy_cache_bypass $cookie_sessionid;

#         # store some sort of metadata
#         add_header X-Proxy-Cache $upstream_cache_status;
#     }

#     location /static/ {
#         alias /home/app/static/;
#     }

#     # disable caching for this endpoint
#     # location /p1 {
#     #     proxy_pass  http://demo;
#     #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     #     proxy_set_header Host $host;

#     #     # other cache settings
#     #     proxy_cache_bypass $http_cache_bypass;
#     #     proxy_cache off;

#     #     # store some sort of metadata
#     #     add_header X-Proxy-Cache $upstream_cache_status;
#     # }
# }
